diff --git a/portable/packages/adafruit/hardware/samd/1.5.10/cores/arduino/USB/USBCore.cpp b/portable/packages/adafruit/hardware/samd/1.5.10/cores/arduino/USB/USBCore.cpp
index 2154fe5..431bb8d 100644
--- a/portable/packages/adafruit/hardware/samd/1.5.10/cores/arduino/USB/USBCore.cpp
+++ b/portable/packages/adafruit/hardware/samd/1.5.10/cores/arduino/USB/USBCore.cpp
@@ -176,8 +176,8 @@ uint32_t USBDeviceClass::sendConfiguration(uint32_t maxlen)
 	//	Now send them
 	_dry_run = false;
 
-	if (maxlen == sizeof(ConfigDescriptor)) {
-		sendControl(&config, sizeof(ConfigDescriptor));
+	if (maxlen <= sizeof(ConfigDescriptor)) {
+		sendControl(&config, maxlen);
 		return true;
 	}
 
@@ -222,8 +222,10 @@ bool USBDeviceClass::sendDescriptor(USBSetup &setup)
 
 	if (t == USB_DEVICE_DESCRIPTOR_TYPE)
 	{
+#ifdef CDC_ENABLED
 		if (setup.wLength == 8)
 			_cdcComposite = 1;
+#endif
 
 		desc_addr = _cdcComposite ?  (const uint8_t*)&USB_DeviceDescriptorB : (const uint8_t*)&USB_DeviceDescriptor;
 
@@ -671,6 +673,7 @@ uint8_t USBDeviceClass::armRecvCtrlOUT(uint32_t ep)
 	usbd.epBank0SetAddress(ep, &udd_ep_out_cache_buffer[ep]);
 	usbd.epBank0SetMultiPacketSize(ep, 8);
 	usbd.epBank0SetByteCount(ep, 0);
+	usbd.epBank1SetByteCount(ep, 0);
 
 	usbd.epBank0ResetReady(ep);
 
@@ -866,8 +869,7 @@ bool USBDeviceClass::handleStandardSetup(USBSetup &setup)
 		{
 			// Enable remote wake-up and send a ZLP
 			isRemoteWakeUpEnabled = 1;
-			uint8_t buff[] = { 0 };
-			armSend(0, buff, 1);
+			sendZlp(0);
 			return true;
 		}
 		if (setup.wValueL == 0) // ENDPOINTHALT
diff --git a/portable/packages/adafruit/hardware/samd/1.5.10/cores/arduino/USB/USBDesc.h b/portable/packages/adafruit/hardware/samd/1.5.10/cores/arduino/USB/USBDesc.h
index 1962be3..eb3e82f 100644
--- a/portable/packages/adafruit/hardware/samd/1.5.10/cores/arduino/USB/USBDesc.h
+++ b/portable/packages/adafruit/hardware/samd/1.5.10/cores/arduino/USB/USBDesc.h
@@ -20,7 +20,7 @@
 #define __USBDESC_H__
 
 // CDC or HID can be enabled together.
-#define CDC_ENABLED
+//#define CDC_ENABLED
 #define PLUGGABLE_USB_ENABLED
 
 #ifdef CDC_ENABLED
diff --git a/portable/packages/arduino/hardware/samd/1.8.4/boards.txt b/portable/packages/arduino/hardware/samd/1.8.4/boards.txt
index 9103895..e36d66d 100644
--- a/portable/packages/arduino/hardware/samd/1.8.4/boards.txt
+++ b/portable/packages/arduino/hardware/samd/1.8.4/boards.txt
@@ -32,7 +32,7 @@ arduino_zero_edbg.build.usb_product="Arduino Zero"
 arduino_zero_edbg.build.usb_manufacturer="Arduino LLC"
 arduino_zero_edbg.build.board=SAMD_ZERO
 arduino_zero_edbg.build.core=arduino
-arduino_zero_edbg.build.extra_flags=-D__SAMD21G18A__ {build.usb_flags}
+arduino_zero_edbg.build.extra_flags=-DUSB_CONFIG_POWER=100 -DCDC_DISABLED -D__SAMD21G18A__ {build.usb_flags}
 arduino_zero_edbg.build.ldscript=linker_scripts/gcc/flash_with_bootloader.ld
 arduino_zero_edbg.build.openocdscript=openocd_scripts/arduino_zero.cfg
 arduino_zero_edbg.build.variant=arduino_zero
@@ -187,7 +187,7 @@ nano_33_iot.build.usb_product="Arduino NANO 33 IoT"
 nano_33_iot.build.usb_manufacturer="Arduino LLC"
 nano_33_iot.build.board=SAMD_NANO_33_IOT
 nano_33_iot.build.core=arduino
-nano_33_iot.build.extra_flags=-DCRYSTALLESS -D__SAMD21G18A__ {build.usb_flags}
+nano_33_iot.build.extra_flags=-DUSB_CONFIG_POWER=100 -DCDC_DISABLED -DCRYSTALLESS -D__SAMD21G18A__ {build.usb_flags}
 nano_33_iot.build.ldscript=linker_scripts/gcc/flash_with_bootloader.ld
 nano_33_iot.build.openocdscript=openocd_scripts/arduino_zero.cfg
 nano_33_iot.build.variant=nano_33_iot
diff --git a/portable/packages/arduino/hardware/samd/1.8.4/cores/arduino/USB/USBCore.cpp b/portable/packages/arduino/hardware/samd/1.8.4/cores/arduino/USB/USBCore.cpp
index c49cc07..88e40da 100644
--- a/portable/packages/arduino/hardware/samd/1.8.4/cores/arduino/USB/USBCore.cpp
+++ b/portable/packages/arduino/hardware/samd/1.8.4/cores/arduino/USB/USBCore.cpp
@@ -161,8 +161,8 @@ uint32_t USBDeviceClass::sendConfiguration(uint32_t maxlen)
 	//	Now send them
 	_dry_run = false;
 
-	if (maxlen == sizeof(ConfigDescriptor)) {
-		sendControl(&config, sizeof(ConfigDescriptor));
+	if (maxlen <= sizeof(ConfigDescriptor)) {
+		sendControl(&config, maxlen);
 		return true;
 	}
 
@@ -198,8 +198,10 @@ bool USBDeviceClass::sendDescriptor(USBSetup &setup)
 
 	if (t == USB_DEVICE_DESCRIPTOR_TYPE)
 	{
+#ifdef CDC_ENABLED
 		if (setup.wLength == 8)
 			_cdcComposite = 1;
+#endif
 
 		desc_addr = _cdcComposite ?  (const uint8_t*)&USB_DeviceDescriptorB : (const uint8_t*)&USB_DeviceDescriptor;
 
@@ -572,6 +574,7 @@ uint8_t USBDeviceClass::armRecvCtrlOUT(uint32_t ep)
 	 */
 	usbd.epBank0SetMultiPacketSize(ep, 64);
 	usbd.epBank0SetByteCount(ep, 0);
+	usbd.epBank1SetByteCount(ep, 0);
 
 	usbd.epBank0ResetReady(ep);
 
@@ -757,8 +760,7 @@ bool USBDeviceClass::handleStandardSetup(USBSetup &setup)
 		{
 			// Enable remote wake-up and send a ZLP
 			isRemoteWakeUpEnabled = 1;
-			uint8_t buff[] = { 0 };
-			armSend(0, buff, 1);
+			sendZlp(0);
 			return true;
 		}
 		if (setup.wValueL == 0) // ENDPOINTHALT

